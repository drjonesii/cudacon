name: Build CUDA Containers

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:
    inputs:
      cuda_version:
        description: 'CUDA version to build'
        required: true
        default: '12.3.1'
        type: choice
        options:
          - '12.3.1'
          - '12.2.2'
          - '12.1.1'
          - '11.8.0'
      rhel_version:
        description: 'RHEL version'
        required: true
        default: '9.3'
        type: string
  schedule:
    - cron: '0 0 * * 0'  # Run security scans weekly

env:
  REGISTRY: ${{ vars.REGISTRY }}
  IMAGE_NAME: ${{ github.repository }}
  DEFAULT_RHEL_VERSION: ${{ vars.DEFAULT_RHEL_VERSION }}
  NVIDIA_DRIVER_CAPABILITIES: ${{ vars.NVIDIA_DRIVER_CAPABILITIES }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Run Hadolint Dockerfile linter
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy

      - name: Upload Hadolint results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'hadolint-results.sarif'
          category: hadolint

  build-and-push:
    needs: security-scan
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write

    strategy:
      matrix:
        include:
          - cuda_version: "12.3.1"
          - cuda_version: "12.2.2"
          - cuda_version: "12.1.1"
          - cuda_version: "11.8.0"
        exclude:
          - cuda_version: ${{ github.event_name != 'workflow_dispatch' && '12.2.2' || '' }}
          - cuda_version: ${{ github.event_name != 'workflow_dispatch' && '12.1.1' || '' }}
          - cuda_version: ${{ github.event_name != 'workflow_dispatch' && '11.8.0' || '' }}
          - cuda_version: ${{ github.event_name == 'workflow_dispatch' && inputs.cuda_version != '12.3.1' && '12.3.1' || '' }}
          - cuda_version: ${{ github.event_name == 'workflow_dispatch' && inputs.cuda_version != '12.2.2' && '12.2.2' || '' }}
          - cuda_version: ${{ github.event_name == 'workflow_dispatch' && inputs.cuda_version != '12.1.1' && '12.1.1' || '' }}
          - cuda_version: ${{ github.event_name == 'workflow_dispatch' && inputs.cuda_version != '11.8.0' && '11.8.0' || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=cuda${{ matrix.cuda_version }}
            type=raw,value=cuda${{ matrix.cuda_version }}-rhel${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}
            type=semver,pattern={{version}}-cuda${{ matrix.cuda_version }}
            type=semver,pattern={{version}}-cuda${{ matrix.cuda_version }}-rhel${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}
            type=sha,prefix=cuda${{ matrix.cuda_version }}-

      - name: Build container for scanning
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:scan-${{ matrix.cuda_version }}
          build-args: |
            CUDA_VERSION=${{ matrix.cuda_version }}
            RHEL_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:scan-${{ matrix.cuda_version }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.cuda_version }}.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.cuda_version }}.sarif'
          category: trivy-container

      - name: Build and push final container
        uses: docker/build-push-action@v5
        env:
          NVIDIA_DRIVER_CAPABILITIES: ${{ env.NVIDIA_DRIVER_CAPABILITIES }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CUDA_VERSION=${{ matrix.cuda_version }}
            RHEL_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            README.md
            LICENSE
          body: |
            CUDA ${{ matrix.cuda_version }} container image for RHEL ${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}
            
            Container images:
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cuda${{ matrix.cuda_version }}`
            - `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cuda${{ matrix.cuda_version }}-rhel${{ github.event_name == 'workflow_dispatch' && inputs.rhel_version || env.DEFAULT_RHEL_VERSION }}`
            
            ### Security Scan Results
            Security scan results have been uploaded to the GitHub Security tab. Please review them for any potential vulnerabilities. 